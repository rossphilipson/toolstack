#!/bin/bash

function reset_extra_xenvm() {
    local value=""

    IFS=';' read -r -a subarr <<< "`xec-vm -n $1 get extra-xenvm`"

    for substr in "${subarr[@]}"
    do
        [[ "$substr" =~ "affinity" ]] && continue

        if [ -z "$value" ]; then
            value="$substr"
        else
            value+=";$substr"
        fi
    done

    xec-vm -n $1 set extra-xenvm "$value"
    echo "Reset VM $1 to value $value"
}

function set_extra_xenvm() {
    local value=`xec-vm -n $1 get extra-xenvm`

    affinity="node-affinity=$2"

    if [ -z "$value" ]; then
        value="$affinity"
    else
        value+=";$affinity"
    fi

    if [ -n "$3" ]; then
        affinity="stubdom-node-affinity=$2"
        value+=";$affinity"
    fi

    xec-vm -n $1 set extra-xenvm "$value"
    echo "Setting VM $1 to value $value"
}

function setup_dom0_vcpus() {
    echo "Setup dom0 with $DOM0 vcpus"

    if [ $DOM0 -gt 0 ]; then
        [ ! -f /boot/system/grub/grub.orig ] && cp /boot/system/grub/grub.cfg /boot/system/grub/grub.orig

        cat /boot/system/grub/grub.cfg | sed 's/dom0_max_vcpus=[[:digit:]]\+ \?//g' | sed 's/dom0_vcpus_pin \?//g' > /boot/system/grub/tmp.cfg
        cat /boot/system/grub/tmp.cfg | sed "s/XEN_COMMON_CMD=\"/XEN_COMMON_CMD=\"dom0_max_vcpus=$DOM0 dom0_vcpus_pin /" > /boot/system/grub/grub.cfg
    fi
}

function numa_setup() {
    # Process the VM list
    for i in ${VMLIST[@]}; do
        vm=$(echo $i | cut -d\: -f1)
        node=$(echo $i | cut -d\: -f2)
        stub_node=$(echo $i | cut -d\: -f3)
        echo "Setting node affinity for $vm to $node and stubdom to $stub_node"
        # Reset the extra-xenvm node, remove all node-affinity settings
        reset_extra_xenvm $vm
        # Set the new node affinity configuration
        set_extra_xenvm $vm $node $stub_node
    done

    # Setup the new dom0 VCPU configuration, remove previous settings
    setup_dom0_vcpus
}

function numa_reset() {
    for i in ${VMLIST[@]}; do
        vm=$(echo $i | cut -d\: -f1)
        echo "Removing node affinity for $vm"
        # Reset the extra-xenvm node, remove all node-affinity settings
        reset_extra_xenvm $vm
    done

    echo "Removing dom0 node affinity"

    [ ! -f /boot/system/grub/grub.orig ] && cp /boot/system/grub/grub.cfg /boot/system/grub/grub.orig

    cat /boot/system/grub/grub.cfg | sed 's/dom0_max_vcpus=[[:digit:]]\+ \?//g' | sed 's/dom0_vcpus_pin \?//g' > /boot/system/grub/tmp.cfg
    cat /boot/system/grub/tmp.cfg > /boot/system/grub/grub.cfg
}

function numa_display() {
    for i in ${VMLIST[@]}; do
        vm=$(echo $i | cut -d\: -f1)
        value=`xec-vm -n $vm get extra-xenvm`
        echo "$vm extra-xenvm: $value"
    done

    echo ""
    echo "DOM0 cmdline:"
    sed -n '/XEN_COMMON_CMD=/p' /boot/system/grub/grub.cfg
}

function numa_usage() {
    echo "Usage: -s  <config-file> Setup NUMA affinity configuration"
    echo "       -r  <config-file> Reset and remove NUMA affinity configuration"
    echo "       -d  <config-file> Display NUMA affinity configuration"
    echo "       -h  Display this message"
}

getopts "s:r:d:h" OPTION

if [ -n "$OPTARG" ]; then
    . $OPTARG
fi

case $OPTION in
    s)
        numa_setup
        exit
        ;;
    r)
        numa_reset
        exit
        ;;
    d)
        numa_display
        exit
        ;;
    h)  ;&
    *)
        numa_usage
        exit
        ;;
esac

